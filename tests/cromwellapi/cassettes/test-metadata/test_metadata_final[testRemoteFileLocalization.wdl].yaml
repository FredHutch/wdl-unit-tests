interactions:
- request:
    body: "--6301f30526838f9366a3fb719326f98b\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"testRemoteFileLocalization.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String string\n
      \       Int integer\n        Float float\n        Boolean boolean\n        File
      remote_file\n    }\n\n    # Task 1: Test input localization and processing\n
      \   call testInputLocalization {\n        input:\n            input_string =
      string,\n            input_integer = integer,\n            input_float = float,\n
      \           input_boolean = boolean,\n            input_file = remote_file\n
      \   }\n\n    # Task 2: Use output from Task 1 as input\n    call testOutputUsage
      {\n        input:\n            processed_file = testInputLocalization.processed_file\n
      \   }\n\n    # Workflow outputs: include all outputs from all tasks\n    output
      {\n        File localized_file = testInputLocalization.processed_file\n        File
      localized_string = testInputLocalization.outputStringfile\n        File localized_integer
      = testInputLocalization.outputIntegerfile\n        File localized_float = testInputLocalization.outputFloatfile\n
      \       File localized_boolean = testInputLocalization.outputBooleanfile\n        File
      renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
      {\n    input {\n        String input_string\n        Int input_integer\n        Float
      input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n
      \   command <<<\n        # Generate and verify input-based outputs\n        echo
      \"~{input_string}\" > localized_string.txt\n        echo \"~{input_integer}\"
      > localized_integer.txt\n        echo \"~{input_float}\" > localized_float.txt\n
      \       echo \"~{input_boolean}\" > localized_boolean.txt\n\n        # Input
      file is expected to already be localized by WDL\n        ls -lh \"~{input_file}\"\n
      \   >>>\n\n    output {\n        File outputStringfile = \"localized_string.txt\"\n
      \       File outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
      = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n
      \       File processed_file = input_file  # Pass input file directly as output\n
      \   }\n\n    runtime {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage
      {\n    input {\n        File processed_file\n    }\n\n    command <<<\n        #
      Rename the file received from the previous task\n        mv ~{processed_file}
      renamed_file.txt\n    >>>\n\n    output {\n        File renamed_file = \"renamed_file.txt\"\n
      \   }\n\n    runtime {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\r\n--6301f30526838f9366a3fb719326f98b\r\nContent-Disposition:
      form-data; name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n  \"testRemoteFileLocalization.string\": \"Test String
      Input\",\n  \"testRemoteFileLocalization.integer\": 123,\n  \"testRemoteFileLocalization.float\":
      9.81,\n  \"testRemoteFileLocalization.boolean\": false,\n  \"testRemoteFileLocalization.remote_file\":
      \"/fh/fast/_DaSL/proof_testing/remote_file.txt\"\n}\n\r\n--6301f30526838f9366a3fb719326f98b\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n  \"final_workflow_outputs_dir\": \"/fh/fast/_DaSL/proof_testing/remoteOutputstorage\",\n
      \ \"use_relative_output_paths\": true\n}\n\r\n--6301f30526838f9366a3fb719326f98b--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3320'
      content-type:
      - multipart/form-data; boundary=6301f30526838f9366a3fb719326f98b
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1
  response:
    body:
      string: '{"id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:24:15 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:24:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:24:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:24:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:24:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:24:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:24:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:24:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:24:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:25:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:26:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:27:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:28:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:29:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:30:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:31:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:32:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:33:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:34:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:35:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:36:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:37:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:38:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:39:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:40:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:41:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:42:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:43:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:44:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:45:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:46:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:47:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:47:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:47:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:47:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T03:47:16.748Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T03:47:16.750Z","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:47:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3796'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T03:47:16.748Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T03:47:16.750Z","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:47:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3796'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T03:47:16.748Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T03:47:16.750Z","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:47:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3796'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T03:47:16.748Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T03:47:16.750Z","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:47:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3796'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T03:47:16.748Z","cromwellVersion":"87"},{"cromwellId":"cromid-8c8d93d","description":"Finished","timestamp":"2025-09-07T03:47:37.237Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{"testRemoteFileLocalization.localized_boolean":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt","testRemoteFileLocalization.localized_integer":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","testRemoteFileLocalization.renamed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/call-testOutputUsage/cacheCopy/execution/renamed_file.txt","testRemoteFileLocalization.localized_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","testRemoteFileLocalization.localized_float":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/call-testInputLocalization/cacheCopy/execution/localized_float.txt","testRemoteFileLocalization.localized_string":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6/call-testInputLocalization/cacheCopy/execution/localized_string.txt"},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-09-07T03:47:37.236Z","start":"2025-09-07T03:47:16.750Z","id":"800d2e38-e051-4ab3-9a1e-61e04f9cd0c6","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-800d2e38-e051-4ab3-9a1e-61e04f9cd0c6"},"submission":"2025-09-07T03:24:15.586Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:47:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '5346'
    status:
      code: 200
      message: OK
version: 1
