name: API Tests - Rewrite Cassettes

on:
  workflow_dispatch:
  # schedule only triggers if this file is on the default branch
  # and will only run on the default branch
  schedule:
    # every Sunday at 3 am
    - cron: "0 3 * * 0"

jobs:
  api-tests-rewrite:
    if: ${{ ! github.event.pull_request.head.repo.fork }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.9.5"
          python-version: 3.13.9

      - name: Install
        run: uv sync --all-extras

      - name: Load secrets
        uses: 1password/load-secrets-action@v2
        with:
          # Export loaded secrets as environment variables to subsequent steps
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          PROOF_API_TOKEN_DEV: "op://PROOF/PROOF_Test_User/dev token"
          PATH_ROOTS: "op://PROOF/PROOF_PATH_ROOTS/credential"

      - name: Run tests and process changes
        id: process-changes
        run: |
          make server_type_not_regulated

          make test_api_rewrite_json_report || true

          # Check if results.json exists and has valid content
          if [ ! -f results.json ]; then
            echo "Error: results.json not found. Tests may have failed completely."
            exit 1
          fi

          # Extract test file paths
          passed_cassettes=$(jq -r '.tests[] | select(.outcome=="passed") | .cassette' results.json | grep -v "null" || echo "")
          passed_mock_jsons=$(jq -r '.tests[] | select(.outcome=="passed") | .mock_json' results.json | grep -v "null" || echo "")

          failed_cassettes=$(jq -r '.tests[] | select(.outcome=="failed") | .cassette' results.json | grep -v "null" || echo "")
          failed_mock_jsons=$(jq -r '.tests[] | select(.outcome=="failed") | .mock_json' results.json | grep -v "null" || echo "")

          # Record failed cassettes for slack message
          length_failed_cassettes=${#failed_cassettes[@]}
          echo "length_failed_cassettes=$length_failed_cassettes" >> $GITHUB_OUTPUT

          # Display passed tests
          echo "========== Tests passed =========="
          if [ -n "$passed_cassettes" ]; then
            echo "$passed_cassettes"
          else
            echo "No passed cassettes found"
          fi

          # Display failed tests
          echo "========== Tests failed =========="
          if [ -n "$failed_cassettes" ]; then
            echo "$failed_cassettes"
          else
            echo "No failed cassettes found"
          fi

          # Handle failed tests by not committing their changes
          if [ -n "$failed_cassettes" ]; then
            echo "Reverting changes to failed test cassettes..."
            echo "$failed_cassettes" | while read -r file; do
              if [ -n "$file" ]; then
                git checkout -- "$file" || true
              fi
            done
          fi

          if [ -n "$failed_mock_jsons" ]; then
            echo "Reverting changes to failed test mock JSONs..."
            echo "$failed_mock_jsons" | while read -r file; do
              if [ -n "$file" ]; then
                git checkout -- "$file" || true
              fi
            done
          fi

      - name: Create a pull request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: create-pull-request/rewrite-cassettes
          title: "Update vcr cassettes"
          commit-message: "updated vcr cassettes"
          delete-branch: true
          add-paths: |
            tests/cromwellapi/cassettes/*
            tests/cromwellapi/mocked_submissions/*
          assignees: sckott
          reviewers: |
            sckott
            seankross
          body: |
            Updated vcr cassettes

            Via event: ${{ github.event_name }}
            - If "workflow_dispatch" it was triggered by a person clicking the "Run workflow" button in the GitHub UI Actions tab
            - If "schedule" it was triggered by a scheduled event (see the `.github/workflows/api-rewrite-cassettes.yml` file for the schedule)

            Review, then either merge or close this PR
            - A cursory review is sufficient (e.g., just look at a few cassette `*yml` files; though if anything is concerning, please investigate and discuss with Scott or Sean)

            What is this?
            - This is a pull request that updates the vcr cassettes for the Cromwell API tests. Read more about how tests work in the [README](https://github.com/FredHutch/wdl-unit-tests?tab=readme-ov-file#tests). We use the `vcrpy` Python library to record and replay HTTP requests and responses (called "cassettes"). These cassettes need to be re-recorded every so often to ensure that tests reflect the reality of the PROOF and Cromwell APIs.

            Note that workflows are not run for this PR because [actions cannot trigger other workflows](https://github.com/peter-evans/create-pull-request/issues/48)

      - name: Send message to Slack
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
              -H 'Content-Type: application/json' \
              -d '{
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": ":checkered_flag: *API Tests - Rewrite Cassettes Finished*\n*Repo:* <${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>\n*Run on Branch:* `${{ github.ref_name }}`\n*Run on Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>\n*Number of failed cassettes:* ${{ steps.process-changes.outputs.length_failed_cassettes }}"
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Go to run"
                        },
                        "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    ]
                  }
                ]
              }'
